{{- if and (.Values.enabled) (.Values.nginx.enabled) }}

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: nginx-dep
    tier: frontend
  name: nginx-dep
spec:
  replicas: {{ required "REQUIRED: nginx.replicas" .Values.nginx.replicas }}
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: nginx-dep
  template:
    metadata:
      labels:
        app: nginx-dep
    spec:
      serviceAccountName: {{ .Release.Namespace -}}-sa
      containers:
      - name: nginx
        image: {{ include "nginx_image" . }}
        imagePullPolicy: Always
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - name: react-env
          mountPath: "/var/www/html"
          readOnly: true
        - name: api-redirects
          mountPath: "/etc/nginx/conf.d"
          readOnly: true

        resources:
          requests:
            memory: {{ required "REQUIRED: nginx.memory.request" .Values.nginx.memory.request }}
            cpu: {{ required "REQUIRED: nginx.cpu.request" .Values.nginx.cpu.request }}
          limits:
            memory: {{ required "REQUIRED: nginx.memory.limit" .Values.nginx.memory.limit }}
            cpu: {{ required "REQUIRED: nginx.cpu.limit" .Values.nginx.cpu.limit }}

        startupProbe:
          httpGet:
            path: /health/
            port: 80
          failureThreshold: 5
          periodSeconds: 5

        livenessProbe:
          httpGet:
            path: /health/
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5

        readinessProbe:
          httpGet:
            path: /health/
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5

        env:
        {{- if .Values.firebase.enabled }}
        - name: FIREBASE_KEY
        {{- if .Values.secrets.enabled }}
          valueFrom:
            secretKeyRef:
              name: secrets-manager
              key: firebase-key
        {{- else }}
          value: fake-firebase-key
        {{- end }}
        {{- end }}

        ports:
        - containerPort: 80
          name: https
          protocol: TCP
    volumes:
      - name: react-env
        configMap:
          name: react-config
          items:
          - key: env.js
            path: env.js
      - name: api-redirects
        configMap:
          name: api-config
          items:
          - key: api.conf
            path: api.conf
{{- end }}
