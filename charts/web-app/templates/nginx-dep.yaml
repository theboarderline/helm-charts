{{- if and (.Values.enabled) (.Values.nginx.enabled) }}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-dep
  namespace: {{ .Release.Namespace }}
  labels:
    app: nginx-dep
    tier: frontend
spec:
  replicas: {{ required "REQUIRED: nginx.replicas" .Values.nginx.replicas }}
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: nginx-dep
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        container.apparmor.security.beta.kubernetes.io/nginx: runtime/default
        container.seccomp.security.alpha.kubernetes.io/nginx: runtime/default
      labels:
        app: nginx-dep
    spec:
      hostIPC: false
      hostNetwork: false
      hostPID: false
      securityContext:
        runAsUser: 115
        runAsGroup: 125
        fsGroup: 190
        supplementalGroups:
          - 150

      serviceAccountName: default
      containers:
      - name: nginx
        image: {{ include "nginx_image" . }}
        imagePullPolicy: Always

        securityContext:
          allowPrivilegeEscalation: false
          privileged: false
          procMount: default
          readOnlyRootFilesystem: false
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault

        volumeMounts:
        - name: react-env
          mountPath: /var/www/env
          readOnly: true
        - name: api-redirects
          mountPath: /etc/nginx/conf.d
          readOnly: true

        - name: log-dir
          mountPath: /var/log/nginx
        - name: body-dir
          mountPath: /var/lib/nginx/body
        - name: proxy-dir
          mountPath: /var/lib/nginx/proxy
        - name: cache-proxy-dir
          mountPath: /var/cache/nginx/proxy_temp
        - name: cache-client-dir
          mountPath: /var/cache/nginx/client_temp
        - name: fast-cgi-dir
          mountPath: /var/cache/nginx/fastcgi_temp
        - name: uwsgi-dir
          mountPath: /var/cache/nginx/uwsgi_temp
        - name: scgi-dir
          mountPath: /var/cache/nginx/scgi_temp
        - name: pid-dir
          mountPath: /var/run

        resources:
          requests:
            memory: {{ required "REQUIRED: nginx.memory.request" .Values.nginx.memory.request }}
            cpu: {{ required "REQUIRED: nginx.cpu.request" .Values.nginx.cpu.request }}
          limits:
            memory: {{ required "REQUIRED: nginx.memory.limit" .Values.nginx.memory.limit }}
            cpu: {{ required "REQUIRED: nginx.cpu.limit" .Values.nginx.cpu.limit }}

        startupProbe:
          httpGet:
            path: /health/
            port: 80
          failureThreshold: 5
          periodSeconds: 5

        livenessProbe:
          httpGet:
            path: /health/
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5

        readinessProbe:
          httpGet:
            path: /health/
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5

        {{- if .Values.firebase.enabled }}
        env:
        - name: FIREBASE_KEY
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: firebase-key
        {{- end }}

        ports:
        - containerPort: 80
          name: https
          protocol: TCP
      volumes:
        - name: react-env
          configMap:
            name: react-config
            items:
            - key: env.js
              path: env.js
        - name: api-redirects
          configMap:
            name: api-config
            items:
            - key: api.conf
              path: api.conf
        - name: log-dir
          emptyDir: {}
        - name: body-dir
          emptyDir: {}
        - name: proxy-dir
          emptyDir: {}
        - name: cache-proxy-dir
          emptyDir: {}
        - name: cache-client-dir
          emptyDir: {}
        - name: fast-cgi-dir
          emptyDir: {}
        - name: uwsgi-dir
          emptyDir: {}
        - name: scgi-dir
          emptyDir: {}
        - name: pid-dir
          emptyDir: {}
{{- end }}
