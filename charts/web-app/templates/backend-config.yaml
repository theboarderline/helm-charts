{{- if and (.Values.enabled) (not .Values.local) }}
{{- if .Values.nginx.enabled }}

apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: nginx-backendconfig
  namespace: {{ .Release.Namespace }}
spec:
  healthCheck:
    checkIntervalSec: 30
    port: {{ .Values.nginx.containerPort }}
    type: HTTP
    requestPath: {{ .Values.nginx.healthCheckPath }}

  securityPolicy:
    name: {{ .Values.security_policy }}

  {{- if or (.Values.google.iap.enabled) (.Values.google.iap.test.enabled) }}
  iap:
    enabled: {{ .Values.google.iap.enabled }}
    oauthClientCredentials:
      secretName: oauth-credentials
  {{- end }}

  cdn:
    enabled: {{ .Values.google.cdn.enabled }}
    cachePolicy:
      includeHost: true
      includeProtocol: true

---
{{- end }}


{{- if .Values.api.enabled }}

apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: api-backendconfig
  namespace: {{ .Release.Namespace }}
spec:
  healthCheck:
    checkIntervalSec: 30
    port: {{ .Values.api.containerPort }}
    type: HTTP
    requestPath: {{ .Values.api.healthCheckPath }}

  securityPolicy:
    name: {{ .Values.security_policy }}

---
{{- end }}


{{- if .Values.importer.enabled }}

apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: importer-backendconfig
  namespace: {{ .Release.Namespace }}
spec:
  healthCheck:
    checkIntervalSec: 30
    port: {{ .Values.importer.containerPort }}
    type: HTTP
    requestPath: {{ .Values.importer.healthCheckPath }}

  securityPolicy:
    name: {{ .Values.security_policy }}

---
{{- end }}

{{- end }}
